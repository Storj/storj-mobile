// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterComponent renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "marginTop": 40,
              "paddingLeft": 42,
              "paddingRight": 50,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#384B65",
                "fontFamily": "montserrat_extrabold",
                "fontSize": 60,
              }
            }
          >
            Let’s get started
          </Text>
          <Component
            style={
              Object {
                "backgroundColor": "transparent",
                "marginTop": 198,
              }
            }
          >
            <InputComponent
              errorMessage="Invalid Email"
              isError={undefined}
              isPassword={false}
              onChangeText={[Function]}
              placeholder="Email"
            />
          </Component>
          <Component>
            <InputComponent
              errorMessage="Invalid password"
              isError={undefined}
              isPassword={true}
              onChangeText={[Function]}
              placeholder="Password"
            />
          </Component>
          <Component>
            <InputComponent
              errorMessage="Password doesn\`t match"
              isError={undefined}
              isPassword={true}
              onChangeText={[Function]}
              placeholder="Confirm password"
            />
          </Component>
          <Component
            style={
              Object {
                "flexDirection": "row",
                "marginTop": 40,
              }
            }
          >
            <CheckboxComponent
              onPress={[Function]}
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#384b65",
                  "fontFamily": "montserrat_regular",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "marginLeft": 22,
                }
              }
            >
              I agree to the
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={
                  Object {
                    "color": "#2794FF",
                    "fontFamily": "montserrat_bold",
                  }
                }
              >
                 Terms of Service
              </Text>
            </Text>
          </Component>
        </Component>,
        <Component
          style={
            Object {
              "alignItems": "center",
              "height": 226,
              "marginTop": 200,
            }
          }
        >
          <TouchableOpacity
            activeOpacity={0.2}
            onPressOut={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2794FF",
                "borderRadius": 16,
                "height": 110,
                "justifyContent": "center",
                "width": 686,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "montserrat_bold",
                  "fontSize": 32,
                }
              }
            >
              Create account
            </Text>
          </TouchableOpacity>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#384B65",
                "fontFamily": "Montserrat",
                "fontSize": 32,
                "lineHeight": 48,
                "marginTop": 30,
              }
            }
          >
            Already have an account?
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              onPress={[Function]}
              style={
                Object {
                  "color": "#2794FF",
                  "fontFamily": "montserrat_bold",
                }
              }
            >
               Login
            </Text>
          </Text>
        </Component>,
        null,
      ],
      "keyboardDismissMode": "interactive",
      "keyboardShouldPersistTaps": "always",
      "style": Object {
        "backgroundColor": "white",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#384B65",
                  "fontFamily": "montserrat_extrabold",
                  "fontSize": 60,
                }
              }
            >
              Let’s get started
            </Text>,
            <Component
              style={
                Object {
                  "backgroundColor": "transparent",
                  "marginTop": 198,
                }
              }
            >
              <InputComponent
                errorMessage="Invalid Email"
                isError={undefined}
                isPassword={false}
                onChangeText={[Function]}
                placeholder="Email"
              />
            </Component>,
            <Component>
              <InputComponent
                errorMessage="Invalid password"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Password"
              />
            </Component>,
            <Component>
              <InputComponent
                errorMessage="Password doesn\`t match"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Confirm password"
              />
            </Component>,
            <Component
              style={
                Object {
                  "flexDirection": "row",
                  "marginTop": 40,
                }
              }
            >
              <CheckboxComponent
                onPress={[Function]}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#384b65",
                    "fontFamily": "montserrat_regular",
                    "fontSize": 32,
                    "lineHeight": 48,
                    "marginLeft": 22,
                  }
                }
              >
                I agree to the
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#2794FF",
                      "fontFamily": "montserrat_bold",
                    }
                  }
                >
                   Terms of Service
                </Text>
              </Text>
            </Component>,
          ],
          "style": Object {
            "marginTop": 40,
            "paddingLeft": 42,
            "paddingRight": 50,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Let’s get started",
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#384B65",
                "fontFamily": "montserrat_extrabold",
                "fontSize": 60,
              },
            },
            "ref": null,
            "rendered": "Let’s get started",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <InputComponent
                errorMessage="Invalid Email"
                isError={undefined}
                isPassword={false}
                onChangeText={[Function]}
                placeholder="Email"
              />,
              "style": Object {
                "backgroundColor": "transparent",
                "marginTop": 198,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Invalid Email",
                "isError": undefined,
                "isPassword": false,
                "onChangeText": [Function],
                "placeholder": "Email",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <InputComponent
                errorMessage="Invalid password"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Password"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Invalid password",
                "isError": undefined,
                "isPassword": true,
                "onChangeText": [Function],
                "placeholder": "Password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <InputComponent
                errorMessage="Password doesn\`t match"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Confirm password"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Password doesn\`t match",
                "isError": undefined,
                "isPassword": true,
                "onChangeText": [Function],
                "placeholder": "Confirm password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CheckboxComponent
                  onPress={[Function]}
                />,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#384b65",
                      "fontFamily": "montserrat_regular",
                      "fontSize": 32,
                      "lineHeight": 48,
                      "marginLeft": 22,
                    }
                  }
                >
                  I agree to the
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    onPress={[Function]}
                    style={
                      Object {
                        "color": "#2794FF",
                        "fontFamily": "montserrat_bold",
                      }
                    }
                  >
                     Terms of Service
                  </Text>
                </Text>,
              ],
              "style": Object {
                "flexDirection": "row",
                "marginTop": 40,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": Array [
                    "I agree to the",
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      onPress={[Function]}
                      style={
                        Object {
                          "color": "#2794FF",
                          "fontFamily": "montserrat_bold",
                        }
                      }
                    >
                       Terms of Service
                    </Text>,
                  ],
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#384b65",
                    "fontFamily": "montserrat_regular",
                    "fontSize": 32,
                    "lineHeight": 48,
                    "marginLeft": 22,
                  },
                },
                "ref": null,
                "rendered": Array [
                  "I agree to the",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "accessible": true,
                      "allowFontScaling": true,
                      "children": " Terms of Service",
                      "ellipsizeMode": "tail",
                      "onPress": [Function],
                      "style": Object {
                        "color": "#2794FF",
                        "fontFamily": "montserrat_bold",
                      },
                    },
                    "ref": null,
                    "rendered": " Terms of Service",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TouchableOpacity
              activeOpacity={0.2}
              onPressOut={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2794FF",
                  "borderRadius": 16,
                  "height": 110,
                  "justifyContent": "center",
                  "width": 686,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "montserrat_bold",
                    "fontSize": 32,
                  }
                }
              >
                Create account
              </Text>
            </TouchableOpacity>,
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#384B65",
                  "fontFamily": "Montserrat",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "marginTop": 30,
                }
              }
            >
              Already have an account?
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={
                  Object {
                    "color": "#2794FF",
                    "fontFamily": "montserrat_bold",
                  }
                }
              >
                 Login
              </Text>
            </Text>,
          ],
          "style": Object {
            "alignItems": "center",
            "height": 226,
            "marginTop": 200,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "montserrat_bold",
                    "fontSize": 32,
                  }
                }
              >
                Create account
              </Text>,
              "onPressOut": [Function],
              "style": Object {
                "alignItems": "center",
                "backgroundColor": "#2794FF",
                "borderRadius": 16,
                "height": 110,
                "justifyContent": "center",
                "width": 686,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "Create account",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#FFFFFF",
                  "fontFamily": "montserrat_bold",
                  "fontSize": 32,
                },
              },
              "ref": null,
              "rendered": "Create account",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": Array [
                "Already have an account?",
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#2794FF",
                      "fontFamily": "montserrat_bold",
                    }
                  }
                >
                   Login
                </Text>,
              ],
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#384B65",
                "fontFamily": "Montserrat",
                "fontSize": 32,
                "lineHeight": 48,
                "marginTop": 30,
              },
            },
            "ref": null,
            "rendered": Array [
              "Already have an account?",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Login",
                  "ellipsizeMode": "tail",
                  "onPress": [Function],
                  "style": Object {
                    "color": "#2794FF",
                    "fontFamily": "montserrat_bold",
                  },
                },
                "ref": null,
                "rendered": " Login",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      null,
    ],
    "type": [MockFunction],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "marginTop": 40,
                "paddingLeft": 42,
                "paddingRight": 50,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#384B65",
                  "fontFamily": "montserrat_extrabold",
                  "fontSize": 60,
                }
              }
            >
              Let’s get started
            </Text>
            <Component
              style={
                Object {
                  "backgroundColor": "transparent",
                  "marginTop": 198,
                }
              }
            >
              <InputComponent
                errorMessage="Invalid Email"
                isError={undefined}
                isPassword={false}
                onChangeText={[Function]}
                placeholder="Email"
              />
            </Component>
            <Component>
              <InputComponent
                errorMessage="Invalid password"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Password"
              />
            </Component>
            <Component>
              <InputComponent
                errorMessage="Password doesn\`t match"
                isError={undefined}
                isPassword={true}
                onChangeText={[Function]}
                placeholder="Confirm password"
              />
            </Component>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                  "marginTop": 40,
                }
              }
            >
              <CheckboxComponent
                onPress={[Function]}
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#384b65",
                    "fontFamily": "montserrat_regular",
                    "fontSize": 32,
                    "lineHeight": 48,
                    "marginLeft": 22,
                  }
                }
              >
                I agree to the
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#2794FF",
                      "fontFamily": "montserrat_bold",
                    }
                  }
                >
                   Terms of Service
                </Text>
              </Text>
            </Component>
          </Component>,
          <Component
            style={
              Object {
                "alignItems": "center",
                "height": 226,
                "marginTop": 200,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPressOut={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2794FF",
                  "borderRadius": 16,
                  "height": 110,
                  "justifyContent": "center",
                  "width": 686,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontFamily": "montserrat_bold",
                    "fontSize": 32,
                  }
                }
              >
                Create account
              </Text>
            </TouchableOpacity>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#384B65",
                  "fontFamily": "Montserrat",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "marginTop": 30,
                }
              }
            >
              Already have an account?
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                onPress={[Function]}
                style={
                  Object {
                    "color": "#2794FF",
                    "fontFamily": "montserrat_bold",
                  }
                }
              >
                 Login
              </Text>
            </Text>
          </Component>,
          null,
        ],
        "keyboardDismissMode": "interactive",
        "keyboardShouldPersistTaps": "always",
        "style": Object {
          "backgroundColor": "white",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#384B65",
                    "fontFamily": "montserrat_extrabold",
                    "fontSize": 60,
                  }
                }
              >
                Let’s get started
              </Text>,
              <Component
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "marginTop": 198,
                  }
                }
              >
                <InputComponent
                  errorMessage="Invalid Email"
                  isError={undefined}
                  isPassword={false}
                  onChangeText={[Function]}
                  placeholder="Email"
                />
              </Component>,
              <Component>
                <InputComponent
                  errorMessage="Invalid password"
                  isError={undefined}
                  isPassword={true}
                  onChangeText={[Function]}
                  placeholder="Password"
                />
              </Component>,
              <Component>
                <InputComponent
                  errorMessage="Password doesn\`t match"
                  isError={undefined}
                  isPassword={true}
                  onChangeText={[Function]}
                  placeholder="Confirm password"
                />
              </Component>,
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                    "marginTop": 40,
                  }
                }
              >
                <CheckboxComponent
                  onPress={[Function]}
                />
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#384b65",
                      "fontFamily": "montserrat_regular",
                      "fontSize": 32,
                      "lineHeight": 48,
                      "marginLeft": 22,
                    }
                  }
                >
                  I agree to the
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    onPress={[Function]}
                    style={
                      Object {
                        "color": "#2794FF",
                        "fontFamily": "montserrat_bold",
                      }
                    }
                  >
                     Terms of Service
                  </Text>
                </Text>
              </Component>,
            ],
            "style": Object {
              "marginTop": 40,
              "paddingLeft": 42,
              "paddingRight": 50,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "Let’s get started",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#384B65",
                  "fontFamily": "montserrat_extrabold",
                  "fontSize": 60,
                },
              },
              "ref": null,
              "rendered": "Let’s get started",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <InputComponent
                  errorMessage="Invalid Email"
                  isError={undefined}
                  isPassword={false}
                  onChangeText={[Function]}
                  placeholder="Email"
                />,
                "style": Object {
                  "backgroundColor": "transparent",
                  "marginTop": 198,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "errorMessage": "Invalid Email",
                  "isError": undefined,
                  "isPassword": false,
                  "onChangeText": [Function],
                  "placeholder": "Email",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <InputComponent
                  errorMessage="Invalid password"
                  isError={undefined}
                  isPassword={true}
                  onChangeText={[Function]}
                  placeholder="Password"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "errorMessage": "Invalid password",
                  "isError": undefined,
                  "isPassword": true,
                  "onChangeText": [Function],
                  "placeholder": "Password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <InputComponent
                  errorMessage="Password doesn\`t match"
                  isError={undefined}
                  isPassword={true}
                  onChangeText={[Function]}
                  placeholder="Confirm password"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "errorMessage": "Password doesn\`t match",
                  "isError": undefined,
                  "isPassword": true,
                  "onChangeText": [Function],
                  "placeholder": "Confirm password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <CheckboxComponent
                    onPress={[Function]}
                  />,
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#384b65",
                        "fontFamily": "montserrat_regular",
                        "fontSize": 32,
                        "lineHeight": 48,
                        "marginLeft": 22,
                      }
                    }
                  >
                    I agree to the
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      onPress={[Function]}
                      style={
                        Object {
                          "color": "#2794FF",
                          "fontFamily": "montserrat_bold",
                        }
                      }
                    >
                       Terms of Service
                    </Text>
                  </Text>,
                ],
                "style": Object {
                  "flexDirection": "row",
                  "marginTop": 40,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onPress": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": Array [
                      "I agree to the",
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        onPress={[Function]}
                        style={
                          Object {
                            "color": "#2794FF",
                            "fontFamily": "montserrat_bold",
                          }
                        }
                      >
                         Terms of Service
                      </Text>,
                    ],
                    "ellipsizeMode": "tail",
                    "style": Object {
                      "color": "#384b65",
                      "fontFamily": "montserrat_regular",
                      "fontSize": 32,
                      "lineHeight": 48,
                      "marginLeft": 22,
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    "I agree to the",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "accessible": true,
                        "allowFontScaling": true,
                        "children": " Terms of Service",
                        "ellipsizeMode": "tail",
                        "onPress": [Function],
                        "style": Object {
                          "color": "#2794FF",
                          "fontFamily": "montserrat_bold",
                        },
                      },
                      "ref": null,
                      "rendered": " Terms of Service",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TouchableOpacity
                activeOpacity={0.2}
                onPressOut={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2794FF",
                    "borderRadius": 16,
                    "height": 110,
                    "justifyContent": "center",
                    "width": 686,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "montserrat_bold",
                      "fontSize": 32,
                    }
                  }
                >
                  Create account
                </Text>
              </TouchableOpacity>,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#384B65",
                    "fontFamily": "Montserrat",
                    "fontSize": 32,
                    "lineHeight": 48,
                    "marginTop": 30,
                  }
                }
              >
                Already have an account?
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#2794FF",
                      "fontFamily": "montserrat_bold",
                    }
                  }
                >
                   Login
                </Text>
              </Text>,
            ],
            "style": Object {
              "alignItems": "center",
              "height": 226,
              "marginTop": 200,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "montserrat_bold",
                      "fontSize": 32,
                    }
                  }
                >
                  Create account
                </Text>,
                "onPressOut": [Function],
                "style": Object {
                  "alignItems": "center",
                  "backgroundColor": "#2794FF",
                  "borderRadius": 16,
                  "height": 110,
                  "justifyContent": "center",
                  "width": 686,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": "Create account",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#FFFFFF",
                    "fontFamily": "montserrat_bold",
                    "fontSize": 32,
                  },
                },
                "ref": null,
                "rendered": "Create account",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": Array [
                  "Already have an account?",
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    onPress={[Function]}
                    style={
                      Object {
                        "color": "#2794FF",
                        "fontFamily": "montserrat_bold",
                      }
                    }
                  >
                     Login
                  </Text>,
                ],
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#384B65",
                  "fontFamily": "Montserrat",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "marginTop": 30,
                },
              },
              "ref": null,
              "rendered": Array [
                "Already have an account?",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": " Login",
                    "ellipsizeMode": "tail",
                    "onPress": [Function],
                    "style": Object {
                      "color": "#2794FF",
                      "fontFamily": "montserrat_bold",
                    },
                  },
                  "ref": null,
                  "rendered": " Login",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        null,
      ],
      "type": [MockFunction],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
